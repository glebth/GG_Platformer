game - главный луп
    1. инициализируется SDL
    2. главгый луп
        инициализируется графика
        инициализируется контроль фреймрейта
        ловятся нажатия
        счиатеся пройденное время -> update(player, level, enemy, ...)
        рисуется(Draw)
            ClearScreen
            level
            player
            enemy
            ~коллизии просчитаваются
            renderPresent(выводится на экран)

graphics - отрисовка (window, render, loadedimages)
    1. инициализирует окно и рендер
    2. загружает и хранит все текстуры
    3. по выходе из программы освобождает все ресурсы (free)

sprite - спрайты
    1. текстура
    2. положение в текстуре
    3. положение нас экране
        Bounding box меньше немного
    4. движение
        движение которое завязано на время требует обработки нажатий
        запоминать надо направление движения(enum LEFT UP DOWN TOP)
    4. обновление
    ::animatedSprite
    + анмиация в зависимости от фрейма
    + набор текстур для анимаций
        Player
            передвижение и здоровье
    

level - карта и гравитация
    1. текстура SDL_Texture 
        2. набор map _textureTiles<gid, Rect(один тайл из этой текстура: позиция + размер)>
            gid - порядковый номер тайла из тайлсета
            одного ректа для тайла не хватит - нужен рект на Карте и рект на тайлсетТекстуре
                поэтому делается новый Класс тайл
            3.  Tile
                SDL_Texture*
                Rect naKarte;
                Rect naTexture;
                AnimatedTile
                    Считать их из XML
        4 Загрузить XML
          Отрисовать тайлы
    
    5. гравитация или коллизия
        vector<Rect>
        6. Склоны
            Класс Slope
            счиать из хмл и сделать

menu

npc
    1. Разделить description и dialog
    2. Выделить все описания и диалоги в отдельный файл
    3. Разобраться с LoadAnimation и Tiled параметрами (w,h,x,y): сейчас они переопределяют друг друга 